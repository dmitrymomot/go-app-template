# https://taskfile.dev

version: "3"

tasks:
  default:
    silent: false
    deps:
      - check

  install:
    desc: Install dependencies for local development.
    silent: true
    cmds:
      - task: install-tailwindcss
      - task: install-turso
      - task: install-sqlc
      - task: install-mockery
      - task: install-errtrace
      - task: install-air
      - task: install-goi18n

  update:
    desc: Update dependencies for local development.
    silent: true
    aliases: [upgrade, upd, update-deps, update-dependencies]
    cmds:
      - brew upgrade tursodatabase/tap/turso # Update Turso CLI
      - brew upgrade sqlc # Update SQLC (SQL repository generator)
      - brew upgrade mockery # Update Mockery (mocks generator)
      - task: update-tailwindcss
      - go install braces.dev/errtrace/cmd/errtrace@latest
      - go install github.com/cosmtrek/air@latest
      - go install github.com/nicksnyder/go-i18n/v2/goi18n@latest

  check:
    desc: Check if all dependencies are installed.
    silent: true
    aliases: [check-deps, check-dependencies]
    preconditions:
      - sh: command -v go
        msg: "Go is not installed. Please install Go from https://golang.org/dl/."
      - sh: command -v turso
        msg: "Turso CLI is not installed. Please run 'task deps:install' to install it."
      - sh: command -v sqlc
        msg: "SQLC is not installed. Please run 'task deps:install' to install it."
      - sh: command -v mockery
        msg: "Mockery is not installed. Please run 'task deps:install' to install it."
      - sh: command -v tailwindcss
        msg: "Tailwind CSS is not installed. Please run 'task deps:install' to install it."
      - sh: command -v errtrace
        msg: "Errtrace is not installed. Please run 'task deps:install' to install it."
      - sh: command -v air
        msg: "Air is not installed. Please run 'task deps:install' to install it."
      - sh: command -v goi18n
        msg: "Go-i18n is not installed. Please run 'task deps:install' to install it."
    cmds:
      - echo "All dependencies are installed."

  install-turso:
    desc: Install Turso CLI for the web application.
    silent: true
    internal: true
    preconditions:
      - sh: command -v brew
        msg: "Homebrew is not installed. Please install Homebrew from https://brew.sh/."
    cmds:
      - |
        if ! [ -f /opt/homebrew/bin/turso ]; then
          brew install tursodatabase/tap/turso # Install Turso CLI
          echo "Turso CLI installed successfully."
        else
          echo "Turso CLI is already installed."
        fi
    generates:
      - /opt/homebrew/bin/turso

  install-sqlc:
    desc: Install SQLC for the web application.
    silent: true
    internal: true
    preconditions:
      - sh: command -v brew
        msg: "Homebrew is not installed. Please install Homebrew from https://brew.sh/."
    cmds:
      - |
        if ! [ -f /opt/homebrew/bin/sqlc ]; then
          brew install sqlc # Install SQLC (SQL repository generator)
          echo "SQLC installed successfully."
        else
          echo "SQLC is already installed."
        fi
    generates:
      - /opt/homebrew/bin/sqlc

  install-mockery:
    desc: Install Mockery for the web application.
    silent: true
    internal: true
    preconditions:
      - sh: command -v brew
        msg: "Homebrew is not installed. Please install Homebrew from https://brew.sh/."
    cmds:
      - |
        if ! [ -f /opt/homebrew/bin/mockery ]; then
          brew install mockery # Install Mockery (mocks generator)
          echo "Mockery installed successfully."
        else
          echo "Mockery is already installed."
        fi
    generates:
      - /opt/homebrew/bin/mockery

  install-errtrace:
    desc: Install Errtrace for the web application.
    silent: true
    internal: true
    preconditions:
      - sh: command -v go
        msg: "Go is not installed. Please install Go from https://golang.org/dl/."
    cmds:
      - |
        if ! [ -f $HOME/go/bin/errtrace ]; then
          go install braces.dev/errtrace/cmd/errtrace@latest
          echo "Errtrace installed successfully."
        else
          echo "Errtrace is already installed."
        fi
    generates:
      - $HOME/go/bin/errtrace

  install-air:
    desc: Install Air for the web application.
    silent: true
    internal: true
    preconditions:
      - sh: command -v go
        msg: "Go is not installed. Please install Go from https://golang.org/dl/."
    cmds:
      - |
        if ! [ -f $HOME/go/bin/air ]; then
          go install github.com/cosmtrek/air@latest
          echo "Air installed successfully."
        else
          echo "Air is already installed."
        fi
    generates:
      - $HOME/go/bin/air

  install-goi18n:
    desc: Install Go-i18n for the web application.
    silent: true
    internal: true
    preconditions:
      - sh: command -v go
        msg: "Go is not installed. Please install Go from https://golang.org/dl/."
    cmds:
      - |
        if ! [ -f $HOME/go/bin/goi18n ]; then
          go install github.com/nicksnyder/go-i18n/v2/goi18n@latest
          echo "Go-i18n installed successfully."
        else
          echo "Go-i18n is already installed."
        fi
    generates:
      - $HOME/go/bin/goi18n

  install-tailwindcss:
    desc: Install Tailwind CSS for the web application.
    silent: true
    internal: true
    cmds:
      - |
        if ! [ -f $HOME/bin/tailwindcss ]; then
          echo "Installing Tailwind CSS..."
          curl -sLO https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-macos-arm64
          chmod +x tailwindcss-macos-arm64
          mkdir -p $HOME/bin
          mv tailwindcss-macos-arm64 $HOME/bin/tailwindcss
          echo "Tailwind CSS installed successfully."
        else
          echo "Tailwind CSS is already installed."
        fi
    generates:
      - $HOME/bin/tailwindcss

  update-tailwindcss:
    desc: Update Tailwind CSS for the web application.
    silent: true
    internal: true
    cmds:
      - |-
        echo "Updating Tailwind CSS..."
        curl -sLO https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-macos-arm64
        chmod +x tailwindcss-macos-arm64
        mkdir -p $HOME/bin
        rm -f $HOME/bin/tailwindcss
        mv tailwindcss-macos-arm64 $HOME/bin/tailwindcss
        echo "Tailwind CSS installed successfully."
