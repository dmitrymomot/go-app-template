package auth

import "github.com/dmitrymomot/go-app-template/web/templates/views"
import "net/url"

templ LoginPage() {
	@views.Layout(views.Head{
		Title:       "Login",
		Description: "Login to the app to access your account.",
	}) {
		<div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">
			<div class="sm:mx-auto sm:w-full sm:max-w-sm">
				<img class="mx-auto h-10 w-auto" src="https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600" alt="Your Company"/>
				<h2 class="mt-10 text-center text-3xl font-bold leading-9 tracking-tight text-zinc-900 dark:text-zinc-100">Sign in to your account</h2>
				<p class="mt-2 text-center text-sm text-zinc-500 dark:text-zinc-400 max-w">
					Not a member?
					<a href="/auth/signup" class="font-semibold leading-6 text-indigo-600 dark:text-indigo-400 hover:text-indigo-500 dark:hover:text-indigo-300">Start a 14 day free trial</a>
				</p>
			</div>
			<div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
				@LoginForm(LoginFormPayload{})
				@GoogleAuth()
				<p class="mt-10 text-center text-sm text-zinc-500 dark:text-zinc-400">
					By signing in you agree to our
					<a href="#" class="font-semibold leading-6 text-indigo-600 dark:text-indigo-400 hover:text-indigo-500 dark:hover:text-indigo-300">Terms of Use</a>
					and
					<a href="#" class="font-semibold leading-6 text-indigo-600 dark:text-indigo-400 hover:text-indigo-500 dark:hover:text-indigo-300">Privacy Policy</a>
				</p>
			</div>
		</div>
	}
}

type LoginFormPayload struct {
	Form   url.Values
	Errors url.Values
}

// General errors
func (p LoginFormPayload) GeneralErrors() []string {
	if p.Errors.Has("general") {
		return p.Errors["general"]
	}
	return nil
}

// Email value
func (p LoginFormPayload) Email() string {
	return p.Form.Get("email")
}

// Password value
func (p LoginFormPayload) Password() string {
	return p.Form.Get("password")
}

// Erros for email field
func (p LoginFormPayload) EmailErrors() []string {
	if p.Errors.Has("email") {
		return p.Errors["email"]
	}
	return nil
}

// Erros for password field
func (p LoginFormPayload) PasswordErrors() []string {
	if p.Errors.Has("password") {
		return p.Errors["password"]
	}
	return nil
}

templ LoginForm(data LoginFormPayload) {
	@Form("/auth/login") {
		@InputField(Input{
			Name:         "email",
			Type:         "email",
			Label:        "Email address",
			Required:     true,
			Autocomplete: "email",
			Value:        data.Email(),
			Errors:       data.EmailErrors(),
		})
		@InputField(Input{
			Name:         "password",
			Type:         "password",
			Label:        "Password",
			Required:     true,
			Autocomplete: "current-password",
			ActionURL:    "/auth/forgot-password",
			ActionLabel:  "Forgot password?",
			Value:        data.Password(),
			Errors:       data.PasswordErrors(),
		})
		@PrimaryButton("Sign in")
	}
}
