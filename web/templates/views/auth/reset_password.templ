package auth

import "github.com/dmitrymomot/go-app-template/web/templates/views"
import "net/url"

templ ResetPasswordPage() {
	@views.Layout(views.Head{
		Title:       "Reset Password",
		Description: "Reset your password to access your account",
	}) {
		<div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">
			<div class="sm:mx-auto sm:w-full sm:max-w-sm">
				<img class="mx-auto h-10 w-auto" src="https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600" alt="Your Company"/>
				<h2 class="mt-10 text-center text-3xl font-bold leading-9 tracking-tight text-zinc-900 dark:text-zinc-100">
					Reset your password
				</h2>
				<p class="mt-2 text-center text-sm text-zinc-500 dark:text-zinc-400 max-w">
					Set a new password for your account. If something goes wrong, you can always <a href="/auth/forgot-password" class="font-semibold leading-6 text-indigo-600 dark:text-indigo-400 hover:text-indigo-500 dark:hover:text-indigo-300">request a new reset link</a>.
				</p>
			</div>
			<div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
				@ResetPasswordForm(ResetPasswordFormPayload{})
			</div>
		</div>
	}
}

type ResetPasswordFormPayload struct {
	Form   url.Values
	Errors url.Values
}

// General errors
func (p ResetPasswordFormPayload) GeneralErrors() []string {
	if p.Errors.Has("general") {
		return p.Errors["general"]
	}
	return nil
}

// Password value
func (p ResetPasswordFormPayload) Password() string {
	return p.Form.Get("password")
}

// Password value
func (p ResetPasswordFormPayload) PasswordConfirmation() string {
	return p.Form.Get("password_confirmation")
}

// Erros for password field
func (p ResetPasswordFormPayload) PasswordErrors() []string {
	if p.Errors.Has("password") {
		return p.Errors["password"]
	}
	return nil
}

// Erros for password_confirmation field
func (p ResetPasswordFormPayload) PasswordConfirmationErrors() []string {
	if p.Errors.Has("password_confirmation") {
		return p.Errors["password_confirmation"]
	}
	return nil
}

templ ResetPasswordForm(data ResetPasswordFormPayload) {
	@Form("/auth/reset-password") {
		@InputField(Input{
			Name:         "password",
			Type:         "password",
			Label:        "Password",
			Required:     true,
			Autocomplete: "new-password",
			Value:        data.Password(),
			Errors:       data.PasswordErrors(),
		})
		@InputField(Input{
			Name:         "password_confirmation",
			Type:         "password",
			Label:        "Confirm password",
			Required:     true,
			Autocomplete: "new-password",
			Value:        data.PasswordConfirmation(),
			Errors:       data.PasswordConfirmationErrors(),
		})
		@PrimaryButton("Reset password")
	}
}
